(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{414:function(t,_,v){"use strict";v.r(_);var a=v(56),s=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"网络面试题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络面试题"}},[t._v("#")]),t._v(" 网络面试题")]),t._v(" "),v("h2",{attrs:{id:"一、http-和-https"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、http-和-https"}},[t._v("#")]),t._v(" 一、HTTP 和 HTTPS")]),t._v(" "),v("h3",{attrs:{id:"_1-http-和-https-的基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-和-https-的基本概念"}},[t._v("#")]),t._v(" 1.HTTP 和 HTTPS 的基本概念")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("http：是一个客户端和服务器端请求和应答的标准（TCP），用于从 WWW 服务器传输超文本到本地浏览器的超文本传输协议。")])]),t._v(" "),v("li",[v("p",[t._v("https：是以安全为目标的 HTTP 通道，即 HTTP 下加入 SSL 层进行加密。其作用是：建立一个信息安全通道，来确保数据的传输，确保网站的真实性。")])])]),t._v(" "),v("h3",{attrs:{id:"_2-http-和-https-的区别及优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-和-https-的区别及优缺点"}},[t._v("#")]),t._v(" 2.HTTP 和 HTTPS 的区别及优缺点")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}}),t._v(" "),v("th",[t._v("HTTP")]),t._v(" "),v("th",[t._v("HTTPS")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("安全角度")]),t._v(" "),v("td",[t._v("《明⽂传输协议》，是以“明⽂”的⽅式传输数据的")]),t._v(" "),v("td",[t._v("《加密传输协议》，传输的数据是需要经过 TLS/SSL 加密后才进行传输的，所以更安全")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("端口角度")]),t._v(" "),v("td",[t._v("端口：80，基于应用层")]),t._v(" "),v("td",[t._v("端口：443，基于传输层")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("加密与证书角度:")]),t._v(" "),v("td",[t._v("不需要向服务端申请证书")]),t._v(" "),v("td",[t._v("需要向服务端申请证书，浏览器端安装对应的根证书")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("优点")]),t._v(" "),v("td",[t._v("简单、灵活、易扩展、应用广")]),t._v(" "),v("td",[t._v("安全性高，确保数据的完整性和准确性")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("缺点")]),t._v(" "),v("td",[t._v("内容容易被窃听、篡改、劫持，无法保证数据的完整性和准确性")]),t._v(" "),v("td",[t._v("握手时延时较高，部署成本高（占用 CPU 资源）")])])])]),t._v(" "),v("h3",{attrs:{id:"_3-http-和-https-协议的工作原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-http-和-https-协议的工作原理"}},[t._v("#")]),t._v(" 3.HTTP 和 HTTPS 协议的工作原理")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("HTTP 协议的工作原理："),v("br"),t._v("\nHTTP 协议工作于客户端──服务端架构上。"),v("br"),t._v("\n浏览器作为 HTTP 客户端通过 URL 向 HTTP 服务端即 WEB 服务器发送所有请求。"),v("br"),t._v("\nWeb 服务器有：Apache 服务器，IIS 服务器等。\nWeb 服务器根据接收到的请求后，向客户端发送响应信息。\nHTTP 默认端口号为：80，可以改为其他端口。"),v("br"),t._v("\nHTTP 协议是基于 TCP/IP 协议之上的协议，是 Web 浏览器和 Web 服务器之间的应用层协议，是通用的、无状态的、面向对象的协议。")])]),t._v(" "),v("li",[v("p",[t._v("HTTPS 协议的工作原理：")]),t._v(" "),v("ul",[v("li",[t._v("客户端使用 https url 访问服务器，则要求 web 服务器建立 ssl 连接。")]),t._v(" "),v("li",[t._v("web 服务器接收到客户端的请求之后，会将网站的证书（证书中包含了公钥），传输给客户端。")]),t._v(" "),v("li",[t._v("客户端和 web 服务器端开始协商 SSL 连接的安全等级，也就是加密等级。")]),t._v(" "),v("li",[t._v("客户端浏览器通过双方协商一致的安全等级，建立会话密钥，然后通过网站的公钥来加密会话密钥，并传送给网站。")]),t._v(" "),v("li",[t._v("web 服务器通过自己的私钥解密出会话密钥。")]),t._v(" "),v("li",[t._v("web 服务器通过会话密钥加密与客户端之间的通信。")])])])]),t._v(" "),v("h2",{attrs:{id:"二、http-请求的过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、http-请求的过程"}},[t._v("#")]),t._v(" 二、HTTP 请求的过程")]),t._v(" "),v("p",[t._v("DNS 域名解析（UDP 协议） ──> 建立 TCP 连接（三次握手） ──> 发起 HTTP 请求  ──> 服务器响应请求并返回结果 ──>  关闭 TCP 连接（四次挥手） ──> 浏览器解析 html 代码（如 js、css、图片等），并渲染给用户。")]),t._v(" "),v("h3",{attrs:{id:"从输入-url-到页面加载的全过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#从输入-url-到页面加载的全过程"}},[t._v("#")]),t._v(" 从输入 URL 到页面加载的全过程")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1.DNS 域名解析：网址进行 DNS 域名解析，得到对应的 IP 地址，根据这个 IP，找到对应的服务器（DNS 服务器是基于 UDP 的，因此会用到 UDP 协议）。")])]),t._v(" "),v("li",[v("p",[t._v("2.建立 TCP 连接：根据 IP 地址和默认 80 端口，和服务器建立 TCP 连接（三次握手）。")])]),t._v(" "),v("li",[v("p",[t._v("3.发起 HTTP 请求：浏览器发起读取文件的 HTTP 请求，该请求报文作为 TCP 三次握手的第三次数据发送给服务器。")])]),t._v(" "),v("li",[v("p",[t._v("4.服务器响应请求并返回结果：服务器响应 HTTP 请求，浏览器得到 html 代码。")])]),t._v(" "),v("li",[v("p",[t._v("5.关闭 TCP 连接：通过四次挥手关闭 TCP 连接。")])]),t._v(" "),v("li",[v("p",[t._v("6.浏览器解析 HTML 内容（如 js、css 图片等）并渲染出来。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("a）解析 html 文件构成 DOM 树。")])]),t._v(" "),v("li",[v("p",[t._v("b）解析 CSS 文件构成渲染树。")])]),t._v(" "),v("li",[v("p",[t._v("c）边解析，边渲染。")])]),t._v(" "),v("li",[v("p",[t._v("d）JS 单线程运行，JS 有可能修改 DOM 结构，意味着 JS 执行完成前，后续所有资源的下载是没有必要的，所以 JS 是单线程，会阻塞后续资源下载。")])])])])]),t._v(" "),v("p",[t._v("⚠️注意："),v("br"),t._v("\n为什么 HTTP 协议要基于 TCP 来实现？"),v("br"),t._v("\nTCP 是一个端到端的可靠的面相连接的协议，HTTP 基于传输层 TCP 协议不用担心数据传输的各种问题（当发生错误时，会重传）。")]),t._v(" "),v("h3",{attrs:{id:"_1-dns-域名解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-dns-域名解析"}},[t._v("#")]),t._v(" 1.DNS 域名解析")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("a）首先会搜索浏览器自身的 DNS 缓存（缓存时间比较短，大概只有1分钟，且只能容纳1000条缓存）。")])]),t._v(" "),v("li",[v("p",[t._v("b）如果浏览器自身的缓存里面没有找到，那么浏览器会搜索系统自身的 DNS 缓存。")])]),t._v(" "),v("li",[v("p",[t._v("c）如果还没有找到，那么尝试从 hosts文件里面去找。")])]),t._v(" "),v("li",[v("p",[t._v("d）在前面三个过程都没获取到的情况下，就递归地去域名服务器去查找，具体过程如下：")])])]),t._v(" "),v("p",[t._v("DNS优化："),v("br"),t._v("\n两个方面：DNS缓存、DNS负载均衡。")]),t._v(" "),v("p",[v("img",{attrs:{src:"%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E7%9A%84%E8%BF%87%E7%A8%8B.png",alt:"域名解析的过程"}})]),t._v(" "),v("h3",{attrs:{id:"_2-建立-tcp-连接-三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-建立-tcp-连接-三次握手"}},[t._v("#")]),t._v(" 2.建立 TCP 连接（三次握手）")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("第一次握手：客户端向服务端发送一个 SYN 请求（SYN 是建立连接时使用，SYN=1）。")])]),t._v(" "),v("li",[v("p",[t._v("第二次握手：服务端确认客户端发来的请求报文，SYN=1，ACK=1。")])]),t._v(" "),v("li",[v("p",[t._v("第三次握手：客户端要再次确认，SYN=0，ACK=1。")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png",alt:"TCP三次握手"}})]),t._v(" "),v("h3",{attrs:{id:"_3-发起-http-请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-发起-http-请求"}},[t._v("#")]),t._v(" 3.发起 HTTP 请求")]),t._v(" "),v("p",[t._v("HTTP 请求报文由三部分组成：请求行，请求头和请求正文。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("请求行：用于描述客户端的请求方式，请求的资源名称以及使用的 HTTP 协议的版本号（例：GET/books/java.html HTTP/1.1）。")])]),t._v(" "),v("li",[v("p",[t._v("请求头：用于描述客户端请求哪台主机，以及客户端的一些环境信息等。")]),t._v(" "),v("ul",[v("li",[t._v("注：这里提一个请求头 Connection，Connection 设置为 keep-alive 用于说明 客户端这边设置的是，本次 HTTP 请求之后并不需要关闭 TCP 连接，这样可以使下次 HTTP 请求使用相同的 TCP 通道，节省 TCP 建立连接的时间。")])])]),t._v(" "),v("li",[v("p",[t._v("请求正文：当使用 POST, PUT 等方法时，通常需要客户端向服务器传递数据。这些数据储存在请求正文中（GET 方式是保存在 url 地址后面，不会放到这里）。")])])]),t._v(" "),v("h3",{attrs:{id:"_4-服务器响应-http-请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-服务器响应-http-请求"}},[t._v("#")]),t._v(" 4.服务器响应 HTTP 请求")]),t._v(" "),v("p",[t._v("HTTP 响应也由三部分组成：状态码，响应头和实体内容。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("状态码：状态码用于表示服务器对请求的处理结果.")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("★列举几种常见的状态码：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("状态码")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("200:")]),t._v(" "),v("td",[t._v("服务器已成功处理了请求")])]),t._v(" "),v("tr",[v("td",[t._v("302:")]),t._v(" "),v("td",[t._v("服务器目前从不同位置的网页响应请求")])]),t._v(" "),v("tr",[v("td",[t._v("304:")]),t._v(" "),v("td",[t._v("自从上次请求后，请求的网页未修改过")])]),t._v(" "),v("tr",[v("td",[t._v("403:")]),t._v(" "),v("td",[t._v("没有访问权限，服务器拒绝请求")])]),t._v(" "),v("tr",[v("td",[t._v("404:")]),t._v(" "),v("td",[t._v("服务器找不到请求的网页")])]),t._v(" "),v("tr",[v("td",[t._v("500:")]),t._v(" "),v("td",[t._v("服务器遇到错误，无法完成请求")])])])])])])]),t._v(" "),v("li",[v("p",[t._v("响应头：响应头用于描述服务器的基本信息，以及客户端如何处理数据.")])]),t._v(" "),v("li",[v("p",[t._v("实体内容：服务器返回给客户端的数据.")]),t._v(" "),v("ul",[v("li",[t._v("注：html 资源文件应该不是通过 HTTP 响应直接返回去的，应该是通过 nginx 通过 io 操作去拿到的.")])])])]),t._v(" "),v("h3",{attrs:{id:"_5-关闭-tcp-连接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-关闭-tcp-连接"}},[t._v("#")]),t._v(" 5.关闭 TCP 连接")]),t._v(" "),v("p",[t._v("通过四次挥手关闭 TCP 连接。")]),t._v(" "),v("ul",[v("li",[t._v("第一次挥手：客户端主动请求关闭，表明客户端没有数据发送，但可以接收数据。")]),t._v(" "),v("li",[t._v("第二次挥手：服务器给客户端确认，表明收到客户端的关闭请求，但服务器还有数据要发送，让客户端等等。")]),t._v(" "),v("li",[t._v("第三次挥手：服务器没有数据发送了，也请求关闭连接，但仍然接收数据。")]),t._v(" "),v("li",[t._v("第四次挥手：服务器必须要等待客户端一个确认，才会关闭连接。客户端经过一段超时等待，确认服务器已经断开之后关闭连接。")])]),t._v(" "),v("h3",{attrs:{id:"_6-浏览器解析-html-内容并渲染"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-浏览器解析-html-内容并渲染"}},[t._v("#")]),t._v(" 6.浏览器解析 HTML 内容并渲染")]),t._v(" "),v("p",[t._v("最后，浏览器利用自己内部的工作机制，把请求的静态资源和 html 代码进行渲染，渲染之后呈现给用户。")]),t._v(" "),v("p",[t._v("浏览器是一个 "),v("strong",[t._v("边解析边渲染")]),t._v(" 的过程。首先浏览器解析 HTML 文件构建 DOM 树，然后解析 CSS 文件构建渲染树，等到渲染树构建完成后，浏览器开始布局渲染树并将其绘制到屏幕上。"),v("br"),t._v("\n这个过程比较复杂，涉及到两个概念：reflow（回流）和 repain（重绘）。"),v("br"),t._v("\n页面在首次加载时必然会经历 回流 和 重绘，它俩的过程是非常消耗性能的，尤其是在移动设备上，它会破坏用户体验，有时会造成页面卡顿。所以我们应该尽可能的减少回流和重绘。")]),t._v(" "),v("p",[t._v("JS 的解析是由浏览器中的 JS 解析引擎完成的。JS 是单线程运行，JS 有可能修改 DOM 结构，意味着 JS 执行完成前，后续所有资源的下载是没有必要的，所以 JS 是单线程，会阻塞后续资源下载。")]),t._v(" "),v("h2",{attrs:{id:"三、tcp-三次握手-不能两次握手的原因"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、tcp-三次握手-不能两次握手的原因"}},[t._v("#")]),t._v(" 三、TCP 三次握手，不能两次握手的原因")]),t._v(" "),v("h3",{attrs:{id:"_1-tcp-三次握手过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-tcp-三次握手过程"}},[t._v("#")]),t._v(" 1.TCP 三次握手过程：")]),t._v(" "),v("ul",[v("li",[t._v("第一次握手：客户端向服务器发送一个 SYN 请求（SYN 是建立连接时使用，SYN=1）。")]),t._v(" "),v("li",[t._v("第二次握手：服务器确认客户端发来的请求报文，SYN=1，ACK=1。")]),t._v(" "),v("li",[t._v("第三次握手：客户端要再次确认，SYN=0，ACK=1。")])]),t._v(" "),v("h3",{attrs:{id:"_2-为什么不是两次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么不是两次握手"}},[t._v("#")]),t._v(" 2.为什么不是两次握手？")]),t._v(" "),v("p",[t._v("TCP 协议初衷就是要设计出一个可靠的连接服务，如果只是两次握手， 那么只有连接发起方的起始序列号（seq）能被确认，另一方的序列号则得不到确认。"),v("br"),t._v("\n换句话说，如果是两次握手建立连接，第二次握手时发生"),v("strong",[t._v("丢包")]),t._v("，那么客户端就无法与服务器建立连接。")]),t._v(" "),v("h2",{attrs:{id:"四、tcp-四次挥手-不能三次挥手的原因"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、tcp-四次挥手-不能三次挥手的原因"}},[t._v("#")]),t._v(" 四、TCP 四次挥手，不能三次挥手的原因")]),t._v(" "),v("h3",{attrs:{id:"_1-四次挥手的过程如下"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-四次挥手的过程如下"}},[t._v("#")]),t._v(" 1.四次挥手的过程如下：")]),t._v(" "),v("ul",[v("li",[t._v("第一次挥手：客户端主动请求关闭，表明客户端没有数据发送，但可以接收数据。")]),t._v(" "),v("li",[t._v("第二次挥手：服务器给客户端确认，表明收到客户端的关闭请求，但服务器还有数据要发送，让客户端等等。")]),t._v(" "),v("li",[t._v("第三次挥手：服务器没有数据发送了，也请求关闭连接，但仍然接收数据。")]),t._v(" "),v("li",[t._v("第四次挥手：服务器必须要等待客户端一个确认，才会关闭连接。客户端经过一段超时等待，确认服务器已经断开之后关闭连接。")])]),t._v(" "),v("h3",{attrs:{id:"_2-为什么不是三次挥手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么不是三次挥手"}},[t._v("#")]),t._v(" 2.为什么不是三次挥手？")]),t._v(" "),v("p",[t._v("第一次挥手：客户端主动请求关闭，表明客户端没有数据发送，但可以接收收据。"),v("br"),t._v("\n第二次挥手：服务器也向客户端发起关闭连接请求，并确认客户端的关闭连接。"),v("br"),t._v("\n第三次挥手：客户端回复 ack 确认，双方连接关闭。")]),t._v(" "),v("p",[t._v("如果在第三次挥手中客户端回复 ack 后，"),v("strong",[t._v("服务器的数据还没发完")]),t._v("，但只有三挥手，服务器只能选择关闭连接，这样客户端的"),v("strong",[t._v("数据就会不完整")]),t._v("，违背了 TCP 可靠连接的初衷。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X2pwZy9qMFJPaWFjNGFkRXNEeE9ENHJ5aDZqcFFXT0VCV1FScm02VXlLS2liVkRqdXdhM0RHNFkzWlhYY0Mxb05odmlhNmtHV2prZWliQlNHNWlidWZpYUYxOHhUN0NBZy82NDA?x-oss-process=image/format,png",alt:"img"}})]),t._v(" "),v("h2",{attrs:{id:"五、tcp-和-udp-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、tcp-和-udp-的区别"}},[t._v("#")]),t._v(" 五、TCP 和 UDP 的区别")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th"),t._v(" "),v("th",[t._v("TCP")]),t._v(" "),v("th",[t._v("UDP")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("是否连接")]),t._v(" "),v("td",[t._v("面向连接")]),t._v(" "),v("td",[t._v("无连接")])]),t._v(" "),v("tr",[v("td",[t._v("是否可靠")]),t._v(" "),v("td",[t._v("可靠传输，使用流量控制和拥塞控制（接收方收到的数据：完整，有序，无差错）")]),t._v(" "),v("td",[t._v("不可靠传输（接收方收到的数据：部分丢失，顺序也不一定能保证）")])]),t._v(" "),v("tr",[v("td",[t._v("连接对象")]),t._v(" "),v("td",[t._v("只能一对一通信")]),t._v(" "),v("td",[t._v("支持一对一、一对多、多对多交互通信")])]),t._v(" "),v("tr",[v("td",[t._v("传输方式/速率:")]),t._v(" "),v("td",[t._v("面向字节流/慢（因为要建立连接，还确认）")]),t._v(" "),v("td",[t._v("面向报文/快")])]),t._v(" "),v("tr",[v("td",[t._v("安全方面")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("安全性高，漏洞比较少")])]),t._v(" "),v("tr",[v("td",[t._v("首页开销")]),t._v(" "),v("td",[t._v("首部最小20字节，最大60字节")]),t._v(" "),v("td",[t._v("首部开销小，仅8字节")])]),t._v(" "),v("tr",[v("td",[t._v("应用场景")]),t._v(" "),v("td",[t._v("对传输大量数据且可靠性要求高时，如：文件传输")]),t._v(" "),v("td",[t._v("对可靠性要求低，追求效率时，如：视频聊天、直播等")])])])]),t._v(" "),v("h2",{attrs:{id:"六、osi-网络分层工作流程-7层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六、osi-网络分层工作流程-7层"}},[t._v("#")]),t._v(" 六、OSI 网络分层工作流程（7层）")]),t._v(" "),v("p",[v("img",{attrs:{src:"OSI%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE.png",alt:"OSI七层协议"}})]),t._v(" "),v("h2",{attrs:{id:"七、http-请求跨域问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#七、http-请求跨域问题"}},[t._v("#")]),t._v(" 七、HTTP 请求跨域问题")]),t._v(" "),v("h3",{attrs:{id:"_1-跨域的原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-跨域的原理"}},[t._v("#")]),t._v(" 1.跨域的原理")]),t._v(" "),v("ul",[v("li",[t._v("跨域：是指浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的。")]),t._v(" "),v("li",[t._v("同源策略：是浏览器对 JavaScript 实施的安全限制，只要协议、域名、端口有任何一个不同，都被当作是不同的域。")]),t._v(" "),v("li",[t._v("跨域原：是通过各种方式，避开浏览器的安全限制。")])]),t._v(" "),v("h3",{attrs:{id:"_2-解决方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-解决方案"}},[t._v("#")]),t._v(" 2.解决方案")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("JSONP：")]),t._v(" "),v("ul",[v("li",[t._v("创建一个 script 标签")]),t._v(" "),v("li",[t._v("script 的 src 属性设置接口地址")]),t._v(" "),v("li",[t._v("接口参数，必须要带一个自定义函数名，要不然后台无法返回数据")]),t._v(" "),v("li",[t._v("通过定义函数名去接受返回的数据")])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//动态创建 script")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置回调函数")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置 script 的 src 属性，并设置请求地址")]),t._v("\nscript"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:3000/?callback=getData'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让 script 生效")]),t._v("\ndocument"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("p",[t._v("JSONP 的缺点:"),v("br"),t._v("\nJSON 只支持 get，因为 script 标签只能使用 get 请求； JSONP 需要后端配合返回指定格式的数据。")])]),t._v(" "),v("li",[v("p",[t._v("CORS： CORS(Cross-origin resource sharing)跨域资源共享 服务器设置对 CORS 的支持原理：服务器设置Access-Control-Allow-Origin HTTP响应头之后，浏览器将会允许跨域请求。")])]),t._v(" "),v("li",[v("p",[t._v("proxy 代理： 目前常用方式，通过服务器设置代理。")])]),t._v(" "),v("li",[v("p",[t._v("window.postMessage()： 利用 H5 新特性 window.postMessage()。")])])]),t._v(" "),v("h2",{attrs:{id:"八、img、iframe、script-来发送跨域请求的优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#八、img、iframe、script-来发送跨域请求的优缺点"}},[t._v("#")]),t._v(" 八、img、iframe、script 来发送跨域请求的优缺点")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("iframe\n优点：跨域完毕之后 DOM 操作和互相之间的 JavaScript 调用都是没有问题的。"),v("br"),t._v("\n缺点："),v("br"),t._v("\n1.若结果要以 URL 参数传递，这就意味着在结果数据量很大的时候需要分割传递，巨烦。"),v("br"),t._v("\n2.还有一个是 iframe 本身带来的，母页面和 iframe 本身的交互本身就有安全性限制。")])]),t._v(" "),v("li",[v("p",[t._v("script\n优点：可以直接返回 json 格式的数据，方便处理。"),v("br"),t._v("\n缺点：只接受 GET 请求方式。")])]),t._v(" "),v("li",[v("p",[t._v("图片 ping\n优点：可以访问任何 url，一般用来进行点击追踪，做页面分析常用的方法。"),v("br"),t._v("\n缺点：不能访问响应文本，只能监听是否响应")])])]),t._v(" "),v("h2",{attrs:{id:"九、get-和-post-请求的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#九、get-和-post-请求的区别"}},[t._v("#")]),t._v(" 九、Get 和 Post 请求的区别")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}}),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("GET 请求")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("POST 请求")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("数据的方式")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("从服务器上"),v("strong",[t._v("获取数据")])]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("向服务器"),v("strong",[t._v("传送数据")])])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("客户端")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("通过 "),v("strong",[t._v("url 提交数据")]),t._v("，数据在 url 中可以看到")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("数据放在 "),v("strong",[t._v("html header 中提交")])])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("安全方面")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("提交数据"),v("strong",[t._v("最多 1024 字节")])]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("strong",[t._v("无限制")])])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("在缓存方面")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("类似于查找的过程，用户获取数据，可以不用每次都与数据库连接，所以"),v("strong",[t._v("可以使用缓存")]),t._v("（适合请求缓存）")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("做的一般是修改和删除的工作，所以必须与数据库交互，所以"),v("strong",[t._v("不能使用缓存")])])])])])])}),[],!1,null,null,null);_.default=s.exports}}]);